#!/usr/bin/env ruby-with-env
RAILS_ROOT = File.expand_path(File.join(File.dirname(__FILE__), ".."))
require "rubygems"
require "#{RAILS_ROOT}/config/environment"
Dir.chdir RAILS_ROOT

puts "Recaching experience"

total = Character.count(:all)
puts "Found #{total} characters"

offset = 0
updated = 0
per_batch = 100

while offset <= total do
	ActiveRecord::Base.transaction do 
		Character.find(:all, :limit => per_batch, :offset => offset, :include => :exp_achievements).each do |character|
			updated += 1
			achievement_list = {}
			character.exp_achievements.each do |data|
				achievement_list[data.achievement_id] = data.count
			end
			
			next if achievement_list.size == 0

			# Now the fun part, calculate it all
			experience_sum = {}
			EXPERIENCE.each do |key, types|
				types.each do |instance|
					instance[:children].each do |child|
						experience_sum[child[:data_id]] = {:amount => 0, :experienced => child[:experienced]}
						summary = experience_sum[child[:data_id]]

						child[:achievements].each do |achievement_id, amount|
							if achievement_list[achievement_id]
								summary[:amount] = summary[:amount] + (amount * achievement_list[achievement_id])
							end
						end

						if child[:cascade]
							experience_sum[child[:cascade]][:amount] = experience_sum[child[:cascade]][:amount] + summary[:amount]
						end
					end
				end
			end
		
			# Cascading means I have to calculate the percentages after the fact, but will want to add it right now
			exp_cache = {}
			character.experiences.each do |experience|
				exp_cache[experience.child_id] = experience
			end
		
			experience_sum.each do |child_id, experience_data|
				experience = exp_cache[child_id] || character.experiences.new
				experience.child_id = child_id
				experience.percent = experience_data[:amount] > 0 ? experience_data[:amount] / experience_data[:experienced].to_f : 0
				experience.save
			end
		
			character.has_achievements = true
			character.touch
					
			puts "[#{total - updated}] ##{character.id} #{character.hash_id}"
		end
	end
	
	puts "Processed batch of #{per_batch} at ##{offset}"
	offset += per_batch
end

puts "Finished!"