= javascript_include_tag("claim")
:javascript
	var base_path = "#{root_url}"
	var account_path = "#{account_url}"
= render :partial => "nav"
.w960.account
	.shadow.claim
		%h1.header Character claiming
		.rowsep
		%p
			Verifying characters allows you to access new features, such as main experience on alt profiles. See 
			= link_to "here", char_profile_path("us", "mal'ganis", "amarand")
			for an example.
		%p
			This may take a minute as it has to contact the armory.
		#claim
			It's easy to verify a character:
			%ol
				%li
					Login to the
					= link_to "WoW Armory", "http://www.wowarmory.com/"
				%li Go to one of your character's armory page
				%li Click the "Calendar" button
				%li
					Click the
					= image_tag "rss-feed.png"
					icon to the right of the "Time settings" dropdown
				%li Select the characters to import (up to 5 at once)
				%li Copy and paste the "Calendar Feed URL"<br />
		#example.example
			%b Example:
			http://www.wowarmory.com/feeds/private/calendar.ics?cn=Shadow&r=Mal'Ganis&token=c3d4c9343a165ac1c8128fc5ccda5a06
		%form{:onsubmit => "claim(); return false;", :action => "/", :method => "GET"}
			.url
				URL:
				= text_field("claim", "url", :id => "calendarurl")
			.submit
				= submit_tag("Verify", :id => "verifyclaim")
				= image_tag "progress.gif", :id => "progress", :class => "invisible"
				
	.shadow.manage
		%h1.header Manage characters
		%p
			- if @claims.length == 0
				After you have verified a character, you'll be able to manage them here
			- else
				Mains are listed in the profiles of your alts. Private characters are not listed. A maximum of #{config_option("claim")["limit"]} characters will be shown in profiles.
		- if @claims.length > 0
			%h1.lightheader Characters (#{@claims.length})
			- row = nil
			- form_for :claim, :url => account_char_path do |f|
				- @claims.each do |claim|
					- if row
						.rowdiv
					- row = true
					- fields_for "claims[]", claim do |claim_f|
						= claim_f.hidden_field(:character_hash, :value => claim.character_hash)
						.row{:class => cycle("darkbg", "lightbg")}
							- if !claim.character.nil?
								.name
									= link_to "#{claim.character.name} - #{claim.character.realm}", char_profile_path(claim.character.region, claim.character.realm, claim.character.name), :class => claim.character.class_token, :onmouseout => tooltip_hide, :onmouseover => tooltip_text("Level #{claim.character.level} #{claim.character.race_name} #{claim.character.class_name}")
							- else
								.name
									= create_unknown_link(claim.character_hash)
							.public
								= claim_f.select(:is_public, {"Private" => "private", "Public" => "public"}, :selected => !claim.is_public.blank? ? "public" : "private")
							.relationship
								= claim_f.select(:relationship, {"Alt" => "alt", "Main" => "main"}, :selected => claim.relationship)
							.delete
								= link_to "Delete", char_del_path(claim.character_hash), :onclick => "return confirm('Are you sure you want to delete this character?');"
				.clearb
				.rowdiv
				.row{:class => "#{cycle("darkbg", "lightbg")} submit"}
					= f.submit("Update")
	.clearb
